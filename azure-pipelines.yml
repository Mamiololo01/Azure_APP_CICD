# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  - group: app-one
  - name: region
    value: 'us-east-2'
trigger:
  - scafolding
  
pool:
    vmImage: ubuntu-latest
  
steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'
  
  - task: PowerShell@2
    displayName: 'Check and install AWS.Tools.Installer and AWS.Tools.Common modules'
    inputs:
      filePath: 'InstallAWSTools.ps1'
  
  # - task: PowerShell@2
  #   displayName: 'Verify aws cli version'
  #   inputs:
  #     targetType: 'inline'
  #     script: 'aws --version'

  # - task: PowerShell@2
  #   displayName: 'Verify docker version'
  #   inputs:
  #       targetType: 'inline'
  #       script: 'docker --version'
  
  # # this step is to check if the pipeline can access library variables
  # - task: PowerShell@2
  #   inputs:
  #     targetType: 'inline'
  #     script: '"value of secret: $(App-One.AccessKey)"'

  # - task: PowerShell@2
  #   inputs:
  #     targetType: 'inline'
  #     script: '"value of region: $(region)"'
              
  - task: PowerShell@2
    displayName: 'Set AWS Credentail'
    inputs:
      targetType: 'inline'
      script: 'Set-AWSCredential -AccessKey $(App-One.AccessKey) `
                -SecretKey $(App-One.SecretKey) `
                -StoreAs AppOneProfile'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: 'Get-AWSCredential -ListProfileDetail'

  - task: PowerShell@2
    displayName: 'Docker login'
    inputs:
      targetType: 'inline'
      script: '(Get-ECRLoginCommand -ProfileName MyNewProfile -Region us-east-2).Password | docker login --username AWS --password-stdin 635656952828.dkr.ecr.us-east-2.amazonaws.com'
  
  - task: PowerShell@2
    displayName: 'Build docker image'
    inputs:
      targetType: 'inline'
      script: 'docker build -t app-one .'

  - task: PowerShell@2
    displayName: 'Tag docker image'
    inputs:
      targetType: 'inline'
      script: 'docker tag app-one:latest 635656952828.dkr.ecr.us-east-2.amazonaws.com/app-one:latest'

  - task: PowerShell@2
    displayName: 'Push docker image to ECR'
    inputs:
      targetType: 'inline'
      script: 'docker push 635656952828.dkr.ecr.us-east-2.amazonaws.com/app-one:latest'
  # - task: PowerShell@2
  #   inputs:
  #     targetType: 'inline'
  #     script: 'Get-S3Bucket -ProfileName AppOneProfile | Where-Object {$_.BucketName -match "terraform"}'

  - task: PowerShell@2
    displayName: 'Remove AWS Credentail'
    inputs:
      targetType: 'inline'
      script: 'Remove-AWSCredentialProfile -ProfileName AppOneProfile -Force'
    condition: always()